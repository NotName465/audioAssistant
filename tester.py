import subprocess

import psutil
import ctypes
import os
import time
import pyperclip


def is_app_running(app_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –µ–≥–æ –ø—É—Ç–∏"""
    try:
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç—å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        target_path = os.path.abspath(app_path).lower()

        for process in psutil.process_iter(['pid', 'name', 'exe']):
            try:
                process_exe = process.info['exe']
                if process_exe and os.path.abspath(process_exe).lower() == target_path:
                    print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ (PID: {process.info['pid']})")
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue

        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ")
        return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def restore_browser_window():
    """–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞"""
    user32 = ctypes.windll.user32

    def enum_windows(hwnd, param):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
            if not user32.IsWindowVisible(hwnd):
                return True

            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            length = user32.GetWindowTextLengthW(hwnd)
            if length > 0:
                buffer = ctypes.create_unicode_buffer(length + 1)
                user32.GetWindowTextW(hwnd, buffer, length + 1)
                title = buffer.value

                # –ò—â–µ–º –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
                if title and any(keyword in title for keyword in ['Yandex', '–Ø–Ω–¥–µ–∫—Å¬†–ë—Ä–∞—É–∑–µ—Ä', 'Opera', 'Chrome', 'Firefox', 'Edge']):
                    print(f"–ù–∞–π–¥–µ–Ω –±—Ä–∞—É–∑–µ—Ä: {title}")

                    if user32.IsIconic(hwnd):
                        user32.ShowWindow(hwnd, 9)

                    user32.SetForegroundWindow(hwnd)
                    return False
        except:
            pass
        return True

    callback = ctypes.WINFUNCTYPE(ctypes.c_bool, ctypes.c_void_p, ctypes.c_void_p)(enum_windows)
    user32.EnumWindows(callback, 0)


def open_browser_and_search(browser_path: str, search_query: str):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É"""

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WinAPI
    user32 = ctypes.windll.user32
    VK_CONTROL = 0x11
    VK_RETURN = 0x0D
    VK_V = 0x56
    KEYEVENTF_KEYUP = 0x0002

    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        original_clipboard = pyperclip.paste()
        # print(f"üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞: '{original_clipboard}'")

        # –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        pyperclip.copy(search_query)
        # print(f"‚úÖ –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: '{search_query}'")

        if(is_app_running(browser_path)):
            restore_browser_window()
        else:
            subprocess.Popen([browser_path])
            time.sleep(1)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞

        # –§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É (Ctrl+L)
        # print("üéØ –§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É...")
        user32.keybd_event(VK_CONTROL, 0, 0, 0)
        user32.keybd_event(ord('L'), 0, 0, 0)
        user32.keybd_event(ord('L'), 0, KEYEVENTF_KEYUP, 0)
        user32.keybd_event(VK_CONTROL, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.5)

        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (Ctrl+V)
        # print("üìù –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç...")
        user32.keybd_event(VK_CONTROL, 0, 0, 0)
        user32.keybd_event(VK_V, 0, 0, 0)
        user32.keybd_event(VK_V, 0, KEYEVENTF_KEYUP, 0)
        user32.keybd_event(VK_CONTROL, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.5)

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ (Enter)
        # print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫...")
        user32.keybd_event(VK_RETURN, 0, 0, 0)
        user32.keybd_event(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)

        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±—É—Ñ–µ—Ä–∞
        time.sleep(1)

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        pyperclip.copy(original_clipboard)
        # print(f"üîÑ –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: '{original_clipboard}'")

        print("‚úÖ –ü–æ–∏—Å–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—É—Ñ–µ—Ä –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        try:
            pyperclip.copy(original_clipboard)
            print(f"üîÑ –ë—É—Ñ–µ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏")
        except:
            pass
        return False

open_browser_and_search(r"C:\Users\user\AppData\Local\Programs\Opera GX\opera.exe", "–ù–∞—Ä–¥—ã –æ–Ω–ª–∞–π–Ω")
