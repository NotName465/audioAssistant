import os
import webbrowser

import pyautogui
import time
from FuncLib import is_app_running, restore_browser_window
def go_to_tab(tab_number, browser_path: str = " "):
    if (not is_app_running(browser_path)):
        restore_browser_window()
    else:
        try:
            os.startfile(browser_path)
        except:
            webbrowser.open("http://yandex.ru")

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Ü–∏—Ñ—Ä—ã
    number_words = {
        '–ø–µ—Ä–≤': 1, '–ø–µ—Ä–≤–∞': 1, '–ø–µ—Ä–≤–æ–π': 1, '–ø–µ—Ä–≤—É—é': 1, '–æ–¥–∏–Ω': 1,
        '–≤—Ç–æ—Ä': 2, '–≤—Ç–æ—Ä–∞': 2, '–≤—Ç–æ—Ä–æ–π': 2, '–≤—Ç–æ—Ä—É—é': 2, '–¥–≤–∞': 2,
        '—Ç—Ä–µ—Ç': 3, '—Ç—Ä–µ—Ç—å': 3, '—Ç—Ä–µ—Ç–∏–π': 3, '—Ç—Ä–µ—Ç—å—é': 3, '—Ç—Ä–∏': 3,
        '—á–µ—Ç–≤–µ—Ä—Ç': 4, '—á–µ—Ç–≤–µ—Ä—Ç–∞': 4, '—á–µ—Ç–≤–µ—Ä—Ç–æ–π': 4, '—á–µ—Ç–≤–µ—Ä—Ç—É—é': 4, '—á–µ—Ç—ã—Ä–µ': 4,
        '–ø—è—Ç': 5, '–ø—è—Ç–∞': 5, '–ø—è—Ç—ã–π': 5, '–ø—è—Ç—É—é': 5, '–ø—è—Ç—å': 5,
        '—à–µ—Å—Ç': 6, '—à–µ—Å—Ç–∞': 6, '—à–µ—Å—Ç–æ–π': 6, '—à–µ—Å—Ç—É—é': 6, '—à–µ—Å—Ç—å': 6,
        '—Å–µ–¥—å–º': 7, '—Å–µ–¥—å–º–∞': 7, '—Å–µ–¥—å–º–æ–π': 7, '—Å–µ–¥—å–º—É—é': 7, '—Å–µ–º—å': 7,
        '–≤–æ—Å—å–º': 8, '–≤–æ—Å—å–º–∞': 8, '–≤–æ—Å—å–º–æ–π': 8, '–≤–æ—Å—å–º—É—é': 8, '–≤–æ—Å–µ–º—å': 8,
        '–¥–µ–≤—è—Ç': 9, '–¥–µ–≤—è—Ç–∞': 9, '–¥–µ–≤—è—Ç—ã–π': 9, '–¥–µ–≤—è—Ç—É—é': 9, '–¥–µ–≤—è—Ç—å': 9,
    }
    original_input = tab_number

    try:
        # –ï—Å–ª–∏ —É–∂–µ —á–∏—Å–ª–æ
        if isinstance(tab_number, int):
            final_number = tab_number

        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞
        elif isinstance(tab_number, str):
            tab_number = tab_number.lower().strip()

            # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Ü–∏—Ñ—Ä—É –∏–∑ —Å—Ç—Ä–æ–∫–∏
            if tab_number.isdigit():
                final_number = int(tab_number)
            else:
                # –ò—â–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
                found_number = None
                for word, number in number_words.items():
                    if word in tab_number:
                        found_number = number
                        break

                if found_number:
                    final_number = found_number
                else:
                    # –ü—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å —Ü–∏—Ñ—Ä—É –∏–∑ —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                    digits = ''.join(filter(str.isdigit, tab_number))
                    if digits:
                        final_number = int(digits)
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä –≤–∫–ª–∞–¥–∫–∏: '{original_input}'")
                        return False

        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø: {type(tab_number)}")
            return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω
        if 1 <= final_number <= 9:
            pyautogui.hotkey('ctrl', str(final_number))
            time.sleep(0.3)
            current_tab = final_number - 1
            print(f"üéØ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ {original_input} –≤–∫–ª–∞–¥–∫—É (#{final_number})")
            return True
        else:
            print(f"‚ùå –ù–æ–º–µ—Ä –≤–∫–ª–∞–¥–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 9, –ø–æ–ª—É—á–µ–Ω–æ: {final_number}")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '{original_input}': {e}")
        return False
