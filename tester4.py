# from tester import BrowserSearcher1
#
# import time
# searcher = BrowserSearcher1()
# searcher.CharChecker("–ù–∞—Ä–¥—ã DCDC")
# def CharChecker(promtForBrowser: str):
#     a = []
#     a1 = []
#     RUSSIAN_KEYBOARD_SYMBOLS_LIST = [
#         # –ù–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
#         '–π', '—Ü', '—É', '–∫', '–µ', '–Ω', '–≥', '—à', '—â', '–∑', '—Ö', '—ä',
#         '—Ñ', '—ã', '–≤', '–∞', '–ø', '—Ä', '–æ', '–ª', '–¥', '–∂', '—ç',
#         '—è', '—á', '—Å', '–º', '–∏', '—Ç', '—å', '–±', '—é', '—ë', " ", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0",
#
#         # –í–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
#         '–ô', '–¶', '–£', '–ö', '–ï', '–ù', '–ì', '–®', '–©', '–ó', '–•',
#         '–™','–§', '–´', '–í', '–ê', '–ü', '–†', '–û', '–õ', '–î', '–ñ', '–≠',
#         '–Ø', '–ß', '–°', '–ú', '–ò', '–¢', '–¨', '–ë', '–Æ', '–Å'
#     ]
#     for i in range(len(promtForBrowser)):
#         a.append(promtForBrowser[i])
#         if (a[i] in RUSSIAN_KEYBOARD_SYMBOLS_LIST):
#             a1.append('RU')
#         else:
#             a1.append('EN')
#     for i in range(len(a)):
#         print(a)
#         print(a1)
# CharChecker("–ù–∞—Ä–¥—ã 123 GGGFFF")


import pyperclip
import subprocess
import time
import ctypes


def open_browser_and_search(browser_path: str, search_query: str):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É"""

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WinAPI
    user32 = ctypes.windll.user32
    VK_CONTROL = 0x11
    VK_RETURN = 0x0D
    VK_V = 0x56
    KEYEVENTF_KEYUP = 0x0002

    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        original_clipboard = pyperclip.paste()
        # print(f"üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞: '{original_clipboard}'")

        # –ö–æ–ø–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        pyperclip.copy(search_query)
        # print(f"‚úÖ –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: '{search_query}'")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        # print(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä: {browser_path}")
        subprocess.Popen([browser_path])
        time.sleep(1)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞

        # –§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É (Ctrl+L)
        # print("üéØ –§–æ–∫—É—Å –Ω–∞ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É...")
        user32.keybd_event(VK_CONTROL, 0, 0, 0)
        user32.keybd_event(ord('L'), 0, 0, 0)
        user32.keybd_event(ord('L'), 0, KEYEVENTF_KEYUP, 0)
        user32.keybd_event(VK_CONTROL, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.5)

        # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ (Ctrl+V)
        # print("üìù –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç...")
        user32.keybd_event(VK_CONTROL, 0, 0, 0)
        user32.keybd_event(VK_V, 0, 0, 0)
        user32.keybd_event(VK_V, 0, KEYEVENTF_KEYUP, 0)
        user32.keybd_event(VK_CONTROL, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.5)

        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ (Enter)
        # print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫...")
        user32.keybd_event(VK_RETURN, 0, 0, 0)
        user32.keybd_event(VK_RETURN, 0, KEYEVENTF_KEYUP, 0)

        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –±—É—Ñ–µ—Ä–∞
        time.sleep(1)

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
        pyperclip.copy(original_clipboard)
        # print(f"üîÑ –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: '{original_clipboard}'")

        print("‚úÖ –ü–æ–∏—Å–∫ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—É—Ñ–µ—Ä –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        try:
            pyperclip.copy(original_clipboard)
            print(f"üîÑ –ë—É—Ñ–µ—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏")
        except:
            pass
        return False


# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    browser_path = r"C:\Users\user\AppData\Local\Programs\Opera GX\opera.exe"
    search_text = "–ù–∞—Ä–¥—ã –æ–Ω–ª–∞–π–Ω –∏–≥—Ä–∞"

    open_browser_and_search(browser_path, search_text)
